basePath: /api/v1
definitions:
  userhdl.CreateUserRequest:
    properties:
      email:
        example: john@example.com
        type: string
      name:
        example: John Doe
        type: string
    required:
    - email
    - name
    type: object
  userhdl.ErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  userhdl.UpdateUserRequest:
    properties:
      email:
        example: john@example.com
        type: string
      name:
        example: John Doe
        type: string
    type: object
  userhdl.UserResponse:
    properties:
      email:
        example: john@example.com
        type: string
      id:
        example: "1"
        type: string
      name:
        example: John Doe
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API documentation for Meek service
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Meek API
  version: "1.0"
paths:
  /health:
    get:
      description: Check if the service is running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check
      tags:
      - health
  /users:
    get:
      description: Get all users from the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/userhdl.UserResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/userhdl.ErrorResponse'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user in the system
      parameters:
      - description: User to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/userhdl.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/userhdl.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/userhdl.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/userhdl.ErrorResponse'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/userhdl.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/userhdl.ErrorResponse'
      summary: Delete a user
      tags:
      - users
    get:
      description: Get a single user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userhdl.UserResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/userhdl.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/userhdl.ErrorResponse'
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update an existing user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/userhdl.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userhdl.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/userhdl.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/userhdl.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/userhdl.ErrorResponse'
      summary: Update a user
      tags:
      - users
schemes:
- http
- https
swagger: "2.0"
